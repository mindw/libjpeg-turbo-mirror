set -u
set -e

if ls $OUTDIR/files/libjpeg-turbo-official-[0-9]*.i386.rpm >/dev/null 2>&1 \
	|| ls $OUTDIR/files/libjpeg-turbo-official-[0-9]*.x86_64.rpm >/dev/null 2>&1 \
	|| ls $OUTDIR/files/libjpeg-turbo-official*_[0-9]*_amd64.deb >/dev/null 2>&1 \
	|| ls $OUTDIR/files/libjpeg-turbo-official*_[0-9]*_i386.deb >/dev/null 2>&1; then
	if [ $FORCEBINARY = 0 ]; then
		echo
		echo Binary already exists!
		echo Run $SCRIPT -fb to rebuild it.
		echo
		exit 1
	else
		rm -f $OUTDIR/files/*.i386.rpm $OUTDIR/files/*.x86_64.rpm $OUTDIR/files/*.deb
	fi
fi

exec > $OUTDIR/log-$PLATFORM.txt 2>&1

echo Creating 64-bit binary RPM ...

mkdir -p rpmbuild/RPMS
mkdir -p rpmbuild/BUILD
mkdir -p rpmbuild/SRPMS
mkdir -p rpmbuild/buildroot

export CC=gcc4
export CFLAGS='-O3'
export JAVACFLAGS='-target 1.5 -source 1.5'
export JAVA=java
export JAVAC=javac
export host_alias=
rpm -i --define "_topdir $TMPDIR/rpmbuild" \
	$OUTDIR/files/libjpeg-turbo-official-[0-9]*.src.rpm
rpmbuild -ba --buildroot $TMPDIR/rpmbuild/buildroot \
	--define "_topdir $TMPDIR/rpmbuild" rpmbuild/SPECS/libjpeg-turbo.spec
VERSION=`rpm -q -p rpmbuild/RPMS/x86_64/libjpeg-turbo-official-[0-9]*.x86_64.rpm | cut -f4 -d-`
mv rpmbuild/RPMS/x86_64/libjpeg-turbo-official-[0-9]*.x86_64.rpm $OUTDIR/files/libjpeg-turbo-official-$VERSION.x86_64.rpm
# This bit of uniqueness is necessary to ensure that the JAR file is bitwise
# identical between the x86_64 and i386 RPM, so they can be co-installed on
# RHEL 6.
cp rpmbuild/BUILD/libjpeg-turbo-$VERSION/java/turbojpeg.jar .
jar cvf $OUTDIR/files/jni/ljtlinux64.jar -C rpmbuild/BUILD/libjpeg-turbo-$VERSION/.libs libturbojpeg.so
rm -rf rpmbuild

echo Creating 32-bit binary RPM ...

pushd libjpeg-turbo*
mkdir linux.rpm
pushd linux.rpm
export CFLAGS='-m32 -O3'
export JAVA=/usr/java/default32/bin/java
export JAVAC=/usr/java/default32/bin/javac
export host_alias=i686-pc-linux-gnu
sh ../configure PKGNAME=libjpeg-turbo-official --with-java --with-pic --with-simd
make
MD5JAR1=`md5sum ../../turbojpeg.jar | cut -f1 -d' '`
rm java/turbojpeg.jar
mv ../../turbojpeg.jar java/
touch -am java/turbojpeg.jar
make rpm
MD5JAR2=`md5sum java/turbojpeg.jar | cut -f1 -d' '`
if [ ! "$MD5JAR1" = "$MD5JAR2" ]; then
	echo ERROR: JARs are not bitwise identical.
	exit 1
fi
VERSION=`rpm -q -p libjpeg-turbo-official-[0-9]*.i386.rpm | cut -f4 -d-`
mv libjpeg-turbo-official-[0-9]*.i386.rpm $OUTDIR/files/libjpeg-turbo-official-$VERSION.i386.rpm
jar cvf $OUTDIR/files/jni/ljtlinux32.jar -C .libs libturbojpeg.so
popd

echo Creating 64-bit binary DEB ...

mkdir linux64
pushd linux64
export CFLAGS='-O3'
export JAVA=java
export JAVAC=javac
export host_alias=
sh ../configure PKGNAME=libjpeg-turbo-official --with-java --with-pic --with-simd
make deb
make test
#make tjtest
mv libjpeg-turbo-official_[0-9]*_amd64.deb $OUTDIR/files/
popd

echo Creating 32-bit binary DEB ...

mkdir linux
pushd linux
export CFLAGS='-m32 -O3'
export JAVA=/usr/java/default32/bin/java
export JAVAC=/usr/java/default32/bin/javac
export host_alias=i686-pc-linux-gnu
sh ../configure PKGNAME=libjpeg-turbo-official --with-java --with-pic --with-simd
make deb
make test
#make tjtest
mv libjpeg-turbo-official_[0-9]*_i386.deb $OUTDIR/files/
mv libjpeg-turbo-official32_[0-9]*_amd64.deb $OUTDIR/files/
popd

popd
